/* Generated by Yosys 0.9+4052 (git sha1 44520808, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) */

(* src = "Mux2x1_8Bits_estruct.v:3.1-52.10" *)
module Mux2x1_8Bits_estruct(In0, In1, clk, valid0, valid1, reset, outValid, data_out);
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  wire _000_;
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  wire _001_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  wire _002_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  wire _003_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  wire _004_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  wire _005_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  wire _006_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  wire _007_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  wire _008_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  wire _009_;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  wire _010_;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  wire _011_;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  wire _012_;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  wire _013_;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  wire _014_;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  wire _015_;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  wire _016_;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  wire _017_;
  (* src = "Mux2x1_8Bits_estruct.v:11.15-11.28" *)
  wire _018_;
  (* src = "Mux2x1_8Bits_estruct.v:11.15-11.28" *)
  wire _019_;
  (* src = "Mux2x1_8Bits_estruct.v:11.15-11.28" *)
  wire _020_;
  (* src = "Mux2x1_8Bits_estruct.v:11.15-11.28" *)
  wire _021_;
  (* src = "Mux2x1_8Bits_estruct.v:11.15-11.28" *)
  wire _022_;
  (* src = "Mux2x1_8Bits_estruct.v:11.15-11.28" *)
  wire _023_;
  (* src = "Mux2x1_8Bits_estruct.v:11.15-11.28" *)
  wire _024_;
  (* src = "Mux2x1_8Bits_estruct.v:11.15-11.28" *)
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  (* src = "Mux2x1_8Bits_estruct.v:5.11-5.14" *)
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  (* src = "Mux2x1_8Bits_estruct.v:6.11-6.16" *)
  wire _113_;
  (* src = "Mux2x1_8Bits_estruct.v:13.9-13.17" *)
  wire _114_;
  (* src = "Mux2x1_8Bits_estruct.v:5.16-5.22" *)
  wire _115_;
  (* src = "Mux2x1_8Bits_estruct.v:5.24-5.30" *)
  wire _116_;
  (* src = "Mux2x1_8Bits_estruct.v:12.10-12.19" *)
  wire _117_;
  (* src = "Mux2x1_8Bits_estruct.v:23.12-23.39" *)
  wire _118_;
  (* src = "Mux2x1_8Bits_estruct.v:28.17-28.44" *)
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire [7:0] _157_;
  wire [7:0] _158_;
  (* force_downto = 32'd1 *)
  (* src = "Mux2x1_8Bits_estruct.v:46.25-46.37|/usr/local/bin/../share/yosys/techmap.v:270.23-270.24" *)
  wire [31:0] _159_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  input [7:0] In0;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  input [7:0] In1;
  (* src = "Mux2x1_8Bits_estruct.v:11.15-11.28" *)
  wire [7:0] ValorAnterior;
  (* src = "Mux2x1_8Bits_estruct.v:5.11-5.14" *)
  input clk;
  (* src = "Mux2x1_8Bits_estruct.v:8.22-8.30" *)
  output [7:0] data_out;
  (* src = "Mux2x1_8Bits_estruct.v:7.16-7.24" *)
  output outValid;
  (* src = "Mux2x1_8Bits_estruct.v:6.11-6.16" *)
  input reset;
  (* src = "Mux2x1_8Bits_estruct.v:13.9-13.17" *)
  wire selector;
  (* src = "Mux2x1_8Bits_estruct.v:5.16-5.22" *)
  input valid0;
  (* src = "Mux2x1_8Bits_estruct.v:5.24-5.30" *)
  input valid1;
  (* src = "Mux2x1_8Bits_estruct.v:12.10-12.19" *)
  wire validTemp;
  NOT _160_ (
    .A(_025_),
    .Y(_079_)
  );
  NOT _161_ (
    .A(_054_),
    .Y(_032_)
  );
  NOT _162_ (
    .A(_024_),
    .Y(_080_)
  );
  NOT _163_ (
    .A(_023_),
    .Y(_081_)
  );
  NOT _164_ (
    .A(_022_),
    .Y(_082_)
  );
  NOT _165_ (
    .A(_021_),
    .Y(_083_)
  );
  NOT _166_ (
    .A(_020_),
    .Y(_084_)
  );
  NOT _167_ (
    .A(_019_),
    .Y(_085_)
  );
  NOT _168_ (
    .A(_018_),
    .Y(_086_)
  );
  NOT _169_ (
    .A(_117_),
    .Y(_087_)
  );
  NOT _170_ (
    .A(_114_),
    .Y(_088_)
  );
  NOT _171_ (
    .A(_116_),
    .Y(_089_)
  );
  NOT _172_ (
    .A(_115_),
    .Y(_090_)
  );
  NOR _173_ (
    .A(_114_),
    .B(_089_),
    .Y(_091_)
  );
  NAND _174_ (
    .A(_088_),
    .B(_116_),
    .Y(_092_)
  );
  NAND _175_ (
    .A(_017_),
    .B(_091_),
    .Y(_093_)
  );
  NOR _176_ (
    .A(_088_),
    .B(_090_),
    .Y(_094_)
  );
  NAND _177_ (
    .A(_114_),
    .B(_115_),
    .Y(_095_)
  );
  NAND _178_ (
    .A(_009_),
    .B(_094_),
    .Y(_096_)
  );
  NAND _179_ (
    .A(_093_),
    .B(_096_),
    .Y(_097_)
  );
  NAND _180_ (
    .A(_092_),
    .B(_095_),
    .Y(_098_)
  );
  NOT _181_ (
    .A(_098_),
    .Y(_099_)
  );
  NOR _182_ (
    .A(_113_),
    .B(_079_),
    .Y(_051_)
  );
  NOR _183_ (
    .A(_079_),
    .B(_098_),
    .Y(_100_)
  );
  NOR _184_ (
    .A(_097_),
    .B(_100_),
    .Y(_101_)
  );
  NOR _185_ (
    .A(_113_),
    .B(_101_),
    .Y(_041_)
  );
  NAND _186_ (
    .A(_016_),
    .B(_091_),
    .Y(_102_)
  );
  NAND _187_ (
    .A(_008_),
    .B(_094_),
    .Y(_103_)
  );
  NAND _188_ (
    .A(_102_),
    .B(_103_),
    .Y(_104_)
  );
  NOR _189_ (
    .A(_113_),
    .B(_080_),
    .Y(_050_)
  );
  NOR _190_ (
    .A(_080_),
    .B(_098_),
    .Y(_105_)
  );
  NOR _191_ (
    .A(_104_),
    .B(_105_),
    .Y(_106_)
  );
  NOR _192_ (
    .A(_113_),
    .B(_106_),
    .Y(_040_)
  );
  NAND _193_ (
    .A(_015_),
    .B(_091_),
    .Y(_107_)
  );
  NAND _194_ (
    .A(_007_),
    .B(_094_),
    .Y(_108_)
  );
  NAND _195_ (
    .A(_107_),
    .B(_108_),
    .Y(_109_)
  );
  NOR _196_ (
    .A(_113_),
    .B(_081_),
    .Y(_049_)
  );
  NOR _197_ (
    .A(_081_),
    .B(_098_),
    .Y(_110_)
  );
  NOR _198_ (
    .A(_109_),
    .B(_110_),
    .Y(_111_)
  );
  NOR _199_ (
    .A(_113_),
    .B(_111_),
    .Y(_039_)
  );
  NAND _200_ (
    .A(_006_),
    .B(_094_),
    .Y(_112_)
  );
  NAND _201_ (
    .A(_014_),
    .B(_091_),
    .Y(_055_)
  );
  NAND _202_ (
    .A(_112_),
    .B(_055_),
    .Y(_056_)
  );
  NOR _203_ (
    .A(_082_),
    .B(_098_),
    .Y(_057_)
  );
  NOR _204_ (
    .A(_056_),
    .B(_057_),
    .Y(_058_)
  );
  NOR _205_ (
    .A(_113_),
    .B(_082_),
    .Y(_048_)
  );
  NOR _206_ (
    .A(_113_),
    .B(_058_),
    .Y(_038_)
  );
  NAND _207_ (
    .A(_013_),
    .B(_091_),
    .Y(_059_)
  );
  NAND _208_ (
    .A(_005_),
    .B(_094_),
    .Y(_060_)
  );
  NAND _209_ (
    .A(_059_),
    .B(_060_),
    .Y(_061_)
  );
  NOR _210_ (
    .A(_113_),
    .B(_083_),
    .Y(_047_)
  );
  NOR _211_ (
    .A(_083_),
    .B(_098_),
    .Y(_062_)
  );
  NOR _212_ (
    .A(_061_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _213_ (
    .A(_113_),
    .B(_063_),
    .Y(_037_)
  );
  NAND _214_ (
    .A(_012_),
    .B(_091_),
    .Y(_064_)
  );
  NAND _215_ (
    .A(_004_),
    .B(_094_),
    .Y(_065_)
  );
  NAND _216_ (
    .A(_064_),
    .B(_065_),
    .Y(_066_)
  );
  NOR _217_ (
    .A(_113_),
    .B(_084_),
    .Y(_046_)
  );
  NOR _218_ (
    .A(_084_),
    .B(_098_),
    .Y(_067_)
  );
  NOR _219_ (
    .A(_066_),
    .B(_067_),
    .Y(_068_)
  );
  NOR _220_ (
    .A(_113_),
    .B(_068_),
    .Y(_036_)
  );
  NAND _221_ (
    .A(_011_),
    .B(_091_),
    .Y(_069_)
  );
  NAND _222_ (
    .A(_003_),
    .B(_094_),
    .Y(_070_)
  );
  NAND _223_ (
    .A(_069_),
    .B(_070_),
    .Y(_071_)
  );
  NOR _224_ (
    .A(_113_),
    .B(_085_),
    .Y(_045_)
  );
  NOR _225_ (
    .A(_085_),
    .B(_098_),
    .Y(_072_)
  );
  NOR _226_ (
    .A(_071_),
    .B(_072_),
    .Y(_073_)
  );
  NOR _227_ (
    .A(_113_),
    .B(_073_),
    .Y(_035_)
  );
  NAND _228_ (
    .A(_010_),
    .B(_091_),
    .Y(_074_)
  );
  NAND _229_ (
    .A(_002_),
    .B(_094_),
    .Y(_075_)
  );
  NAND _230_ (
    .A(_074_),
    .B(_075_),
    .Y(_076_)
  );
  NOR _231_ (
    .A(_113_),
    .B(_086_),
    .Y(_044_)
  );
  NOR _232_ (
    .A(_086_),
    .B(_098_),
    .Y(_077_)
  );
  NOR _233_ (
    .A(_076_),
    .B(_077_),
    .Y(_078_)
  );
  NOR _234_ (
    .A(_113_),
    .B(_078_),
    .Y(_053_)
  );
  NOR _235_ (
    .A(_113_),
    .B(_114_),
    .Y(_052_)
  );
  NOR _236_ (
    .A(_113_),
    .B(_087_),
    .Y(_043_)
  );
  NOR _237_ (
    .A(_113_),
    .B(_099_),
    .Y(_042_)
  );
  NOT _238_ (
    .A(_054_),
    .Y(_031_)
  );
  NOT _239_ (
    .A(_054_),
    .Y(_030_)
  );
  NOT _240_ (
    .A(_054_),
    .Y(_029_)
  );
  NOT _241_ (
    .A(_054_),
    .Y(_028_)
  );
  NOT _242_ (
    .A(_054_),
    .Y(_027_)
  );
  NOT _243_ (
    .A(_054_),
    .Y(_026_)
  );
  NOT _244_ (
    .A(_054_),
    .Y(_034_)
  );
  NOT _245_ (
    .A(_054_),
    .Y(_033_)
  );
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  DFF _246_ (
    .C(_129_),
    .D(_144_),
    .Q(validTemp)
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _247_ (
    .C(clk),
    .D(_145_),
    .Q(outValid)
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _248_ (
    .C(clk),
    .D(_146_),
    .Q(data_out[0])
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _249_ (
    .C(clk),
    .D(_147_),
    .Q(data_out[1])
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _250_ (
    .C(clk),
    .D(_148_),
    .Q(data_out[2])
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _251_ (
    .C(clk),
    .D(_149_),
    .Q(data_out[3])
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _252_ (
    .C(clk),
    .D(_150_),
    .Q(data_out[4])
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _253_ (
    .C(clk),
    .D(_151_),
    .Q(data_out[5])
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _254_ (
    .C(clk),
    .D(_152_),
    .Q(data_out[6])
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _255_ (
    .C(clk),
    .D(_153_),
    .Q(data_out[7])
  );
  (* src = "Mux2x1_8Bits_estruct.v:39.5-50.8" *)
  DFF _256_ (
    .C(clk),
    .D(_154_),
    .Q(selector)
  );
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  DFF _257_ (
    .C(_121_),
    .D(_156_),
    .Q(ValorAnterior[0])
  );
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  DFF _258_ (
    .C(_122_),
    .D(_131_),
    .Q(ValorAnterior[1])
  );
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  DFF _259_ (
    .C(_123_),
    .D(_133_),
    .Q(ValorAnterior[2])
  );
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  DFF _260_ (
    .C(_124_),
    .D(_135_),
    .Q(ValorAnterior[3])
  );
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  DFF _261_ (
    .C(_125_),
    .D(_137_),
    .Q(ValorAnterior[4])
  );
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  DFF _262_ (
    .C(_126_),
    .D(_139_),
    .Q(ValorAnterior[5])
  );
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  DFF _263_ (
    .C(_127_),
    .D(_141_),
    .Q(ValorAnterior[6])
  );
  (* src = "Mux2x1_8Bits_estruct.v:15.5-37.8" *)
  DFF _264_ (
    .C(_128_),
    .D(_143_),
    .Q(ValorAnterior[7])
  );
  assign _159_[31:1] = 31'h00000000;
  assign _113_ = reset;
  assign _143_ = _041_;
  assign _025_ = ValorAnterior[7];
  assign _054_ = clk;
  assign _127_ = _032_;
  assign _141_ = _040_;
  assign _024_ = ValorAnterior[6];
  assign _126_ = _031_;
  assign _139_ = _039_;
  assign _023_ = ValorAnterior[5];
  assign _125_ = _030_;
  assign _137_ = _038_;
  assign _022_ = ValorAnterior[4];
  assign _124_ = _029_;
  assign _135_ = _037_;
  assign _021_ = ValorAnterior[3];
  assign _123_ = _028_;
  assign _133_ = _036_;
  assign _020_ = ValorAnterior[2];
  assign _122_ = _027_;
  assign _131_ = _035_;
  assign _019_ = ValorAnterior[1];
  assign _121_ = _026_;
  assign _156_ = _053_;
  assign _018_ = ValorAnterior[0];
  assign _154_ = _052_;
  assign _153_ = _051_;
  assign _152_ = _050_;
  assign _151_ = _049_;
  assign _150_ = _048_;
  assign _149_ = _047_;
  assign _148_ = _046_;
  assign _147_ = _045_;
  assign _146_ = _044_;
  assign _117_ = validTemp;
  assign _145_ = _043_;
  assign _129_ = _034_;
  assign _144_ = _042_;
  assign _114_ = selector;
  assign _116_ = valid1;
  assign _115_ = valid0;
  assign _010_ = In1[0];
  assign _011_ = In1[1];
  assign _012_ = In1[2];
  assign _013_ = In1[3];
  assign _014_ = In1[4];
  assign _015_ = In1[5];
  assign _016_ = In1[6];
  assign _017_ = In1[7];
  assign _002_ = In0[0];
  assign _003_ = In0[1];
  assign _004_ = In0[2];
  assign _005_ = In0[3];
  assign _006_ = In0[4];
  assign _007_ = In0[5];
  assign _008_ = In0[6];
  assign _009_ = In0[7];
  assign _128_ = _033_;
endmodule

(* src = "Recirculacion_estruct.v:1.1-124.10" *)
module Recirculacion_estruct(In0, In1, In2, In3, clk, reset, valid0, valid1, valid2, valid3, recirculacion_estruct, data_mux0, data_Probador0_estruct, data_mux1, data_Probador1_estruct, data_mux2, data_Probador2_estruct, data_mux3, data_Probador3_estruct, valid0_mux, valid1_mux, valid2_mux, valid3_mux, valid0_probador_estruct, valid1_probador_estruct, valid2_probador_estruct, valid3_probador_estruct);
  (* src = "Recirculacion_estruct.v:2.17-2.20" *)
  wire _000_;
  (* src = "Recirculacion_estruct.v:2.17-2.20" *)
  wire _001_;
  (* src = "Recirculacion_estruct.v:2.17-2.20" *)
  wire _002_;
  (* src = "Recirculacion_estruct.v:2.17-2.20" *)
  wire _003_;
  (* src = "Recirculacion_estruct.v:2.17-2.20" *)
  wire _004_;
  (* src = "Recirculacion_estruct.v:2.17-2.20" *)
  wire _005_;
  (* src = "Recirculacion_estruct.v:2.17-2.20" *)
  wire _006_;
  (* src = "Recirculacion_estruct.v:2.17-2.20" *)
  wire _007_;
  (* src = "Recirculacion_estruct.v:2.22-2.25" *)
  wire _008_;
  (* src = "Recirculacion_estruct.v:2.22-2.25" *)
  wire _009_;
  (* src = "Recirculacion_estruct.v:2.22-2.25" *)
  wire _010_;
  (* src = "Recirculacion_estruct.v:2.22-2.25" *)
  wire _011_;
  (* src = "Recirculacion_estruct.v:2.22-2.25" *)
  wire _012_;
  (* src = "Recirculacion_estruct.v:2.22-2.25" *)
  wire _013_;
  (* src = "Recirculacion_estruct.v:2.22-2.25" *)
  wire _014_;
  (* src = "Recirculacion_estruct.v:2.22-2.25" *)
  wire _015_;
  (* src = "Recirculacion_estruct.v:2.27-2.30" *)
  wire _016_;
  (* src = "Recirculacion_estruct.v:2.27-2.30" *)
  wire _017_;
  (* src = "Recirculacion_estruct.v:2.27-2.30" *)
  wire _018_;
  (* src = "Recirculacion_estruct.v:2.27-2.30" *)
  wire _019_;
  (* src = "Recirculacion_estruct.v:2.27-2.30" *)
  wire _020_;
  (* src = "Recirculacion_estruct.v:2.27-2.30" *)
  wire _021_;
  (* src = "Recirculacion_estruct.v:2.27-2.30" *)
  wire _022_;
  (* src = "Recirculacion_estruct.v:2.27-2.30" *)
  wire _023_;
  (* src = "Recirculacion_estruct.v:2.32-2.35" *)
  wire _024_;
  (* src = "Recirculacion_estruct.v:2.32-2.35" *)
  wire _025_;
  (* src = "Recirculacion_estruct.v:2.32-2.35" *)
  wire _026_;
  (* src = "Recirculacion_estruct.v:2.32-2.35" *)
  wire _027_;
  (* src = "Recirculacion_estruct.v:2.32-2.35" *)
  wire _028_;
  (* src = "Recirculacion_estruct.v:2.32-2.35" *)
  wire _029_;
  (* src = "Recirculacion_estruct.v:2.32-2.35" *)
  wire _030_;
  (* src = "Recirculacion_estruct.v:2.32-2.35" *)
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  (* src = "Recirculacion_estruct.v:5.11-5.24" *)
  wire _179_;
  (* src = "Recirculacion_estruct.v:3.16-3.21" *)
  wire _180_;
  (* src = "Recirculacion_estruct.v:4.11-4.17" *)
  wire _181_;
  (* src = "Recirculacion_estruct.v:4.19-4.25" *)
  wire _182_;
  (* src = "Recirculacion_estruct.v:4.27-4.33" *)
  wire _183_;
  (* src = "Recirculacion_estruct.v:4.35-4.41" *)
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  (* src = "Recirculacion_estruct.v:2.17-2.20" *)
  input [7:0] In0;
  (* src = "Recirculacion_estruct.v:2.22-2.25" *)
  input [7:0] In1;
  (* src = "Recirculacion_estruct.v:2.27-2.30" *)
  input [7:0] In2;
  (* src = "Recirculacion_estruct.v:2.32-2.35" *)
  input [7:0] In3;
  (* src = "Recirculacion_estruct.v:3.11-3.14" *)
  input clk;
  (* src = "Recirculacion_estruct.v:7.22-7.36" *)
  output [7:0] data_Probador0_estruct;
  (* src = "Recirculacion_estruct.v:9.22-9.36" *)
  output [7:0] data_Probador1_estruct;
  (* src = "Recirculacion_estruct.v:11.22-11.36" *)
  output [7:0] data_Probador2_estruct;
  (* src = "Recirculacion_estruct.v:13.22-13.36" *)
  output [7:0] data_Probador3_estruct;
  (* src = "Recirculacion_estruct.v:6.22-6.31" *)
  output [7:0] data_mux0;
  (* src = "Recirculacion_estruct.v:8.22-8.31" *)
  output [7:0] data_mux1;
  (* src = "Recirculacion_estruct.v:10.22-10.31" *)
  output [7:0] data_mux2;
  (* src = "Recirculacion_estruct.v:12.22-12.31" *)
  output [7:0] data_mux3;
  (* src = "Recirculacion_estruct.v:5.11-5.24" *)
  input recirculacion_estruct;
  (* src = "Recirculacion_estruct.v:3.16-3.21" *)
  input reset;
  (* src = "Recirculacion_estruct.v:4.11-4.17" *)
  input valid0;
  (* src = "Recirculacion_estruct.v:14.16-14.26" *)
  output valid0_mux;
  (* src = "Recirculacion_estruct.v:15.16-15.31" *)
  output valid0_probador_estruct;
  (* src = "Recirculacion_estruct.v:4.19-4.25" *)
  input valid1;
  (* src = "Recirculacion_estruct.v:14.28-14.38" *)
  output valid1_mux;
  (* src = "Recirculacion_estruct.v:15.33-15.48" *)
  output valid1_probador_estruct;
  (* src = "Recirculacion_estruct.v:4.27-4.33" *)
  input valid2;
  (* src = "Recirculacion_estruct.v:14.40-14.50" *)
  output valid2_mux;
  (* src = "Recirculacion_estruct.v:15.50-15.65" *)
  output valid2_probador_estruct;
  (* src = "Recirculacion_estruct.v:4.35-4.41" *)
  input valid3;
  (* src = "Recirculacion_estruct.v:14.52-14.62" *)
  output valid3_mux;
  (* src = "Recirculacion_estruct.v:15.67-15.82" *)
  output valid3_probador_estruct;
  NOT _260_ (
    .A(_022_),
    .Y(_104_)
  );
  NOT _261_ (
    .A(_021_),
    .Y(_105_)
  );
  NOT _262_ (
    .A(_020_),
    .Y(_106_)
  );
  NOT _263_ (
    .A(_019_),
    .Y(_107_)
  );
  NOT _264_ (
    .A(_018_),
    .Y(_108_)
  );
  NOT _265_ (
    .A(_017_),
    .Y(_109_)
  );
  NOT _266_ (
    .A(_016_),
    .Y(_110_)
  );
  NOT _267_ (
    .A(_184_),
    .Y(_111_)
  );
  NOT _268_ (
    .A(_181_),
    .Y(_112_)
  );
  NOT _269_ (
    .A(_015_),
    .Y(_113_)
  );
  NOT _270_ (
    .A(_014_),
    .Y(_114_)
  );
  NOT _271_ (
    .A(_013_),
    .Y(_115_)
  );
  NOT _272_ (
    .A(_012_),
    .Y(_116_)
  );
  NOT _273_ (
    .A(_011_),
    .Y(_117_)
  );
  NOT _274_ (
    .A(_010_),
    .Y(_118_)
  );
  NOT _275_ (
    .A(_009_),
    .Y(_119_)
  );
  NOT _276_ (
    .A(_008_),
    .Y(_120_)
  );
  NOT _277_ (
    .A(_182_),
    .Y(_121_)
  );
  NOT _278_ (
    .A(_183_),
    .Y(_122_)
  );
  NOT _279_ (
    .A(_007_),
    .Y(_123_)
  );
  NOT _280_ (
    .A(_006_),
    .Y(_124_)
  );
  NOT _281_ (
    .A(_005_),
    .Y(_125_)
  );
  NOT _282_ (
    .A(_004_),
    .Y(_126_)
  );
  NOT _283_ (
    .A(_003_),
    .Y(_127_)
  );
  NOT _284_ (
    .A(_002_),
    .Y(_128_)
  );
  NOT _285_ (
    .A(_001_),
    .Y(_129_)
  );
  NOT _286_ (
    .A(_000_),
    .Y(_130_)
  );
  NOT _287_ (
    .A(_031_),
    .Y(_131_)
  );
  NOT _288_ (
    .A(_030_),
    .Y(_132_)
  );
  NOT _289_ (
    .A(_029_),
    .Y(_133_)
  );
  NOT _290_ (
    .A(_028_),
    .Y(_134_)
  );
  NOT _291_ (
    .A(_027_),
    .Y(_135_)
  );
  NOT _292_ (
    .A(_026_),
    .Y(_136_)
  );
  NOT _293_ (
    .A(_025_),
    .Y(_137_)
  );
  NOT _294_ (
    .A(_024_),
    .Y(_138_)
  );
  NOT _295_ (
    .A(_023_),
    .Y(_139_)
  );
  NOT _296_ (
    .A(_180_),
    .Y(_140_)
  );
  NAND _297_ (
    .A(_140_),
    .B(_179_),
    .Y(_141_)
  );
  NOR _298_ (
    .A(_104_),
    .B(_141_),
    .Y(_102_)
  );
  NOR _299_ (
    .A(_105_),
    .B(_141_),
    .Y(_101_)
  );
  NOR _300_ (
    .A(_106_),
    .B(_141_),
    .Y(_100_)
  );
  NOR _301_ (
    .A(_107_),
    .B(_141_),
    .Y(_099_)
  );
  NOR _302_ (
    .A(_108_),
    .B(_141_),
    .Y(_098_)
  );
  NOR _303_ (
    .A(_109_),
    .B(_141_),
    .Y(_097_)
  );
  NOR _304_ (
    .A(_110_),
    .B(_141_),
    .Y(_096_)
  );
  NOR _305_ (
    .A(_111_),
    .B(_141_),
    .Y(_095_)
  );
  NOR _306_ (
    .A(_180_),
    .B(_179_),
    .Y(_142_)
  );
  NAND _307_ (
    .A(_181_),
    .B(_142_),
    .Y(_143_)
  );
  NOT _308_ (
    .A(_143_),
    .Y(_094_)
  );
  NOR _309_ (
    .A(_113_),
    .B(_141_),
    .Y(_093_)
  );
  NOR _310_ (
    .A(_114_),
    .B(_141_),
    .Y(_092_)
  );
  NOR _311_ (
    .A(_115_),
    .B(_141_),
    .Y(_091_)
  );
  NOR _312_ (
    .A(_116_),
    .B(_141_),
    .Y(_090_)
  );
  NOR _313_ (
    .A(_117_),
    .B(_141_),
    .Y(_089_)
  );
  NOR _314_ (
    .A(_118_),
    .B(_141_),
    .Y(_088_)
  );
  NOR _315_ (
    .A(_119_),
    .B(_141_),
    .Y(_087_)
  );
  NOR _316_ (
    .A(_120_),
    .B(_141_),
    .Y(_086_)
  );
  NOR _317_ (
    .A(_121_),
    .B(_141_),
    .Y(_085_)
  );
  NOR _318_ (
    .A(_122_),
    .B(_141_),
    .Y(_084_)
  );
  NOR _319_ (
    .A(_123_),
    .B(_141_),
    .Y(_083_)
  );
  NOR _320_ (
    .A(_124_),
    .B(_141_),
    .Y(_082_)
  );
  NOR _321_ (
    .A(_125_),
    .B(_141_),
    .Y(_081_)
  );
  NOR _322_ (
    .A(_126_),
    .B(_141_),
    .Y(_080_)
  );
  NOR _323_ (
    .A(_127_),
    .B(_141_),
    .Y(_079_)
  );
  NOR _324_ (
    .A(_128_),
    .B(_141_),
    .Y(_078_)
  );
  NOR _325_ (
    .A(_129_),
    .B(_141_),
    .Y(_077_)
  );
  NOR _326_ (
    .A(_130_),
    .B(_141_),
    .Y(_076_)
  );
  NAND _327_ (
    .A(_031_),
    .B(_142_),
    .Y(_144_)
  );
  NOT _328_ (
    .A(_144_),
    .Y(_075_)
  );
  NAND _329_ (
    .A(_030_),
    .B(_142_),
    .Y(_145_)
  );
  NOT _330_ (
    .A(_145_),
    .Y(_074_)
  );
  NAND _331_ (
    .A(_029_),
    .B(_142_),
    .Y(_146_)
  );
  NOT _332_ (
    .A(_146_),
    .Y(_073_)
  );
  NAND _333_ (
    .A(_028_),
    .B(_142_),
    .Y(_147_)
  );
  NOT _334_ (
    .A(_147_),
    .Y(_072_)
  );
  NAND _335_ (
    .A(_027_),
    .B(_142_),
    .Y(_148_)
  );
  NOT _336_ (
    .A(_148_),
    .Y(_071_)
  );
  NAND _337_ (
    .A(_026_),
    .B(_142_),
    .Y(_149_)
  );
  NOT _338_ (
    .A(_149_),
    .Y(_070_)
  );
  NAND _339_ (
    .A(_025_),
    .B(_142_),
    .Y(_150_)
  );
  NOT _340_ (
    .A(_150_),
    .Y(_069_)
  );
  NAND _341_ (
    .A(_024_),
    .B(_142_),
    .Y(_151_)
  );
  NOT _342_ (
    .A(_151_),
    .Y(_068_)
  );
  NAND _343_ (
    .A(_184_),
    .B(_142_),
    .Y(_152_)
  );
  NOT _344_ (
    .A(_152_),
    .Y(_067_)
  );
  NAND _345_ (
    .A(_015_),
    .B(_142_),
    .Y(_153_)
  );
  NOT _346_ (
    .A(_153_),
    .Y(_066_)
  );
  NAND _347_ (
    .A(_014_),
    .B(_142_),
    .Y(_154_)
  );
  NOT _348_ (
    .A(_154_),
    .Y(_065_)
  );
  NAND _349_ (
    .A(_013_),
    .B(_142_),
    .Y(_155_)
  );
  NOT _350_ (
    .A(_155_),
    .Y(_064_)
  );
  NAND _351_ (
    .A(_012_),
    .B(_142_),
    .Y(_156_)
  );
  NOT _352_ (
    .A(_156_),
    .Y(_063_)
  );
  NAND _353_ (
    .A(_011_),
    .B(_142_),
    .Y(_157_)
  );
  NOT _354_ (
    .A(_157_),
    .Y(_062_)
  );
  NAND _355_ (
    .A(_010_),
    .B(_142_),
    .Y(_158_)
  );
  NOT _356_ (
    .A(_158_),
    .Y(_061_)
  );
  NAND _357_ (
    .A(_009_),
    .B(_142_),
    .Y(_159_)
  );
  NOT _358_ (
    .A(_159_),
    .Y(_060_)
  );
  NAND _359_ (
    .A(_008_),
    .B(_142_),
    .Y(_160_)
  );
  NOT _360_ (
    .A(_160_),
    .Y(_059_)
  );
  NAND _361_ (
    .A(_183_),
    .B(_142_),
    .Y(_161_)
  );
  NOT _362_ (
    .A(_161_),
    .Y(_058_)
  );
  NAND _363_ (
    .A(_182_),
    .B(_142_),
    .Y(_162_)
  );
  NOT _364_ (
    .A(_162_),
    .Y(_057_)
  );
  NOR _365_ (
    .A(_131_),
    .B(_141_),
    .Y(_056_)
  );
  NOR _366_ (
    .A(_132_),
    .B(_141_),
    .Y(_055_)
  );
  NOR _367_ (
    .A(_133_),
    .B(_141_),
    .Y(_054_)
  );
  NOR _368_ (
    .A(_134_),
    .B(_141_),
    .Y(_053_)
  );
  NOR _369_ (
    .A(_135_),
    .B(_141_),
    .Y(_052_)
  );
  NOR _370_ (
    .A(_136_),
    .B(_141_),
    .Y(_051_)
  );
  NOR _371_ (
    .A(_137_),
    .B(_141_),
    .Y(_050_)
  );
  NOR _372_ (
    .A(_138_),
    .B(_141_),
    .Y(_049_)
  );
  NAND _373_ (
    .A(_007_),
    .B(_142_),
    .Y(_163_)
  );
  NOT _374_ (
    .A(_163_),
    .Y(_048_)
  );
  NAND _375_ (
    .A(_006_),
    .B(_142_),
    .Y(_164_)
  );
  NOT _376_ (
    .A(_164_),
    .Y(_047_)
  );
  NAND _377_ (
    .A(_005_),
    .B(_142_),
    .Y(_165_)
  );
  NOT _378_ (
    .A(_165_),
    .Y(_046_)
  );
  NAND _379_ (
    .A(_004_),
    .B(_142_),
    .Y(_166_)
  );
  NOT _380_ (
    .A(_166_),
    .Y(_045_)
  );
  NAND _381_ (
    .A(_003_),
    .B(_142_),
    .Y(_167_)
  );
  NOT _382_ (
    .A(_167_),
    .Y(_044_)
  );
  NAND _383_ (
    .A(_002_),
    .B(_142_),
    .Y(_168_)
  );
  NOT _384_ (
    .A(_168_),
    .Y(_043_)
  );
  NAND _385_ (
    .A(_001_),
    .B(_142_),
    .Y(_169_)
  );
  NOT _386_ (
    .A(_169_),
    .Y(_042_)
  );
  NAND _387_ (
    .A(_000_),
    .B(_142_),
    .Y(_170_)
  );
  NOT _388_ (
    .A(_170_),
    .Y(_041_)
  );
  NAND _389_ (
    .A(_023_),
    .B(_142_),
    .Y(_171_)
  );
  NOT _390_ (
    .A(_171_),
    .Y(_040_)
  );
  NAND _391_ (
    .A(_022_),
    .B(_142_),
    .Y(_172_)
  );
  NOT _392_ (
    .A(_172_),
    .Y(_039_)
  );
  NAND _393_ (
    .A(_021_),
    .B(_142_),
    .Y(_173_)
  );
  NOT _394_ (
    .A(_173_),
    .Y(_038_)
  );
  NAND _395_ (
    .A(_020_),
    .B(_142_),
    .Y(_174_)
  );
  NOT _396_ (
    .A(_174_),
    .Y(_037_)
  );
  NAND _397_ (
    .A(_019_),
    .B(_142_),
    .Y(_175_)
  );
  NOT _398_ (
    .A(_175_),
    .Y(_036_)
  );
  NAND _399_ (
    .A(_018_),
    .B(_142_),
    .Y(_176_)
  );
  NOT _400_ (
    .A(_176_),
    .Y(_035_)
  );
  NAND _401_ (
    .A(_017_),
    .B(_142_),
    .Y(_177_)
  );
  NOT _402_ (
    .A(_177_),
    .Y(_034_)
  );
  NAND _403_ (
    .A(_016_),
    .B(_142_),
    .Y(_178_)
  );
  NOT _404_ (
    .A(_178_),
    .Y(_033_)
  );
  NOR _405_ (
    .A(_112_),
    .B(_141_),
    .Y(_032_)
  );
  NOR _406_ (
    .A(_139_),
    .B(_141_),
    .Y(_103_)
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _407_ (
    .C(clk),
    .D(_188_),
    .Q(valid0_mux)
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _408_ (
    .C(clk),
    .D(_189_),
    .Q(data_Probador2_estruct[0])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _409_ (
    .C(clk),
    .D(_190_),
    .Q(data_Probador2_estruct[1])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _410_ (
    .C(clk),
    .D(_191_),
    .Q(data_Probador2_estruct[2])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _411_ (
    .C(clk),
    .D(_192_),
    .Q(data_Probador2_estruct[3])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _412_ (
    .C(clk),
    .D(_193_),
    .Q(data_Probador2_estruct[4])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _413_ (
    .C(clk),
    .D(_194_),
    .Q(data_Probador2_estruct[5])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _414_ (
    .C(clk),
    .D(_195_),
    .Q(data_Probador2_estruct[6])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _415_ (
    .C(clk),
    .D(_196_),
    .Q(data_Probador2_estruct[7])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _416_ (
    .C(clk),
    .D(_197_),
    .Q(data_Probador0_estruct[0])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _417_ (
    .C(clk),
    .D(_198_),
    .Q(data_Probador0_estruct[1])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _418_ (
    .C(clk),
    .D(_199_),
    .Q(data_Probador0_estruct[2])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _419_ (
    .C(clk),
    .D(_200_),
    .Q(data_Probador0_estruct[3])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _420_ (
    .C(clk),
    .D(_201_),
    .Q(data_Probador0_estruct[4])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _421_ (
    .C(clk),
    .D(_202_),
    .Q(data_Probador0_estruct[5])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _422_ (
    .C(clk),
    .D(_203_),
    .Q(data_Probador0_estruct[6])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _423_ (
    .C(clk),
    .D(_204_),
    .Q(data_Probador0_estruct[7])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _424_ (
    .C(clk),
    .D(_205_),
    .Q(data_mux3[0])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _425_ (
    .C(clk),
    .D(_206_),
    .Q(data_mux3[1])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _426_ (
    .C(clk),
    .D(_207_),
    .Q(data_mux3[2])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _427_ (
    .C(clk),
    .D(_208_),
    .Q(data_mux3[3])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _428_ (
    .C(clk),
    .D(_209_),
    .Q(data_mux3[4])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _429_ (
    .C(clk),
    .D(_210_),
    .Q(data_mux3[5])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _430_ (
    .C(clk),
    .D(_211_),
    .Q(data_mux3[6])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _431_ (
    .C(clk),
    .D(_212_),
    .Q(data_mux3[7])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _432_ (
    .C(clk),
    .D(_213_),
    .Q(valid1_probador_estruct)
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _433_ (
    .C(clk),
    .D(_214_),
    .Q(valid2_probador_estruct)
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _434_ (
    .C(clk),
    .D(_215_),
    .Q(data_Probador1_estruct[0])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _435_ (
    .C(clk),
    .D(_216_),
    .Q(data_Probador1_estruct[1])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _436_ (
    .C(clk),
    .D(_217_),
    .Q(data_Probador1_estruct[2])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _437_ (
    .C(clk),
    .D(_218_),
    .Q(data_Probador1_estruct[3])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _438_ (
    .C(clk),
    .D(_219_),
    .Q(data_Probador1_estruct[4])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _439_ (
    .C(clk),
    .D(_220_),
    .Q(data_Probador1_estruct[5])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _440_ (
    .C(clk),
    .D(_221_),
    .Q(data_Probador1_estruct[6])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _441_ (
    .C(clk),
    .D(_222_),
    .Q(data_Probador1_estruct[7])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _442_ (
    .C(clk),
    .D(_223_),
    .Q(valid3_probador_estruct)
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _443_ (
    .C(clk),
    .D(_224_),
    .Q(data_Probador3_estruct[0])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _444_ (
    .C(clk),
    .D(_225_),
    .Q(data_Probador3_estruct[1])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _445_ (
    .C(clk),
    .D(_226_),
    .Q(data_Probador3_estruct[2])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _446_ (
    .C(clk),
    .D(_227_),
    .Q(data_Probador3_estruct[3])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _447_ (
    .C(clk),
    .D(_228_),
    .Q(data_Probador3_estruct[4])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _448_ (
    .C(clk),
    .D(_229_),
    .Q(data_Probador3_estruct[5])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _449_ (
    .C(clk),
    .D(_230_),
    .Q(data_Probador3_estruct[6])
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _450_ (
    .C(clk),
    .D(_231_),
    .Q(data_Probador3_estruct[7])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _451_ (
    .C(clk),
    .D(_232_),
    .Q(data_mux0[0])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _452_ (
    .C(clk),
    .D(_233_),
    .Q(data_mux0[1])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _453_ (
    .C(clk),
    .D(_234_),
    .Q(data_mux0[2])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _454_ (
    .C(clk),
    .D(_235_),
    .Q(data_mux0[3])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _455_ (
    .C(clk),
    .D(_236_),
    .Q(data_mux0[4])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _456_ (
    .C(clk),
    .D(_237_),
    .Q(data_mux0[5])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _457_ (
    .C(clk),
    .D(_238_),
    .Q(data_mux0[6])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _458_ (
    .C(clk),
    .D(_239_),
    .Q(data_mux0[7])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _459_ (
    .C(clk),
    .D(_240_),
    .Q(valid2_mux)
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _460_ (
    .C(clk),
    .D(_241_),
    .Q(valid1_mux)
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _461_ (
    .C(clk),
    .D(_242_),
    .Q(data_mux1[0])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _462_ (
    .C(clk),
    .D(_243_),
    .Q(data_mux1[1])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _463_ (
    .C(clk),
    .D(_244_),
    .Q(data_mux1[2])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _464_ (
    .C(clk),
    .D(_245_),
    .Q(data_mux1[3])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _465_ (
    .C(clk),
    .D(_246_),
    .Q(data_mux1[4])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _466_ (
    .C(clk),
    .D(_247_),
    .Q(data_mux1[5])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _467_ (
    .C(clk),
    .D(_248_),
    .Q(data_mux1[6])
  );
  (* src = "Recirculacion_estruct.v:46.1-70.4" *)
  DFF _468_ (
    .C(clk),
    .D(_249_),
    .Q(data_mux1[7])
  );
  (* src = "Recirculacion_estruct.v:20.1-43.4" *)
  DFF _469_ (
    .C(clk),
    .D(_250_),
    .Q(valid0_probador_estruct)
  );
  (* src = "Recirculacion_estruct.v:99.1-122.4" *)
  DFF _470_ (
    .C(clk),
    .D(_251_),
    .Q(valid3_mux)
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _471_ (
    .C(clk),
    .D(_252_),
    .Q(data_mux2[0])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _472_ (
    .C(clk),
    .D(_253_),
    .Q(data_mux2[1])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _473_ (
    .C(clk),
    .D(_254_),
    .Q(data_mux2[2])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _474_ (
    .C(clk),
    .D(_255_),
    .Q(data_mux2[3])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _475_ (
    .C(clk),
    .D(_256_),
    .Q(data_mux2[4])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _476_ (
    .C(clk),
    .D(_257_),
    .Q(data_mux2[5])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _477_ (
    .C(clk),
    .D(_258_),
    .Q(data_mux2[6])
  );
  (* src = "Recirculacion_estruct.v:73.1-96.4" *)
  DFF _478_ (
    .C(clk),
    .D(_259_),
    .Q(data_mux2[7])
  );
  assign _022_ = In2[6];
  assign _258_ = _102_;
  assign _021_ = In2[5];
  assign _257_ = _101_;
  assign _020_ = In2[4];
  assign _256_ = _100_;
  assign _019_ = In2[3];
  assign _255_ = _099_;
  assign _018_ = In2[2];
  assign _254_ = _098_;
  assign _017_ = In2[1];
  assign _253_ = _097_;
  assign _016_ = In2[0];
  assign _252_ = _096_;
  assign _184_ = valid3;
  assign _251_ = _095_;
  assign _181_ = valid0;
  assign _250_ = _094_;
  assign _015_ = In1[7];
  assign _249_ = _093_;
  assign _014_ = In1[6];
  assign _248_ = _092_;
  assign _013_ = In1[5];
  assign _247_ = _091_;
  assign _012_ = In1[4];
  assign _246_ = _090_;
  assign _011_ = In1[3];
  assign _245_ = _089_;
  assign _010_ = In1[2];
  assign _244_ = _088_;
  assign _009_ = In1[1];
  assign _243_ = _087_;
  assign _008_ = In1[0];
  assign _242_ = _086_;
  assign _182_ = valid1;
  assign _241_ = _085_;
  assign _183_ = valid2;
  assign _240_ = _084_;
  assign _007_ = In0[7];
  assign _239_ = _083_;
  assign _006_ = In0[6];
  assign _238_ = _082_;
  assign _005_ = In0[5];
  assign _237_ = _081_;
  assign _004_ = In0[4];
  assign _236_ = _080_;
  assign _003_ = In0[3];
  assign _235_ = _079_;
  assign _002_ = In0[2];
  assign _234_ = _078_;
  assign _001_ = In0[1];
  assign _233_ = _077_;
  assign _000_ = In0[0];
  assign _232_ = _076_;
  assign _031_ = In3[7];
  assign _231_ = _075_;
  assign _030_ = In3[6];
  assign _230_ = _074_;
  assign _029_ = In3[5];
  assign _229_ = _073_;
  assign _028_ = In3[4];
  assign _228_ = _072_;
  assign _027_ = In3[3];
  assign _227_ = _071_;
  assign _026_ = In3[2];
  assign _226_ = _070_;
  assign _025_ = In3[1];
  assign _225_ = _069_;
  assign _024_ = In3[0];
  assign _224_ = _068_;
  assign _223_ = _067_;
  assign _222_ = _066_;
  assign _221_ = _065_;
  assign _220_ = _064_;
  assign _219_ = _063_;
  assign _218_ = _062_;
  assign _217_ = _061_;
  assign _216_ = _060_;
  assign _215_ = _059_;
  assign _214_ = _058_;
  assign _213_ = _057_;
  assign _212_ = _056_;
  assign _211_ = _055_;
  assign _210_ = _054_;
  assign _209_ = _053_;
  assign _208_ = _052_;
  assign _207_ = _051_;
  assign _206_ = _050_;
  assign _205_ = _049_;
  assign _204_ = _048_;
  assign _203_ = _047_;
  assign _202_ = _046_;
  assign _201_ = _045_;
  assign _200_ = _044_;
  assign _199_ = _043_;
  assign _198_ = _042_;
  assign _197_ = _041_;
  assign _023_ = In2[7];
  assign _196_ = _040_;
  assign _195_ = _039_;
  assign _194_ = _038_;
  assign _193_ = _037_;
  assign _192_ = _036_;
  assign _191_ = _035_;
  assign _190_ = _034_;
  assign _189_ = _033_;
  assign _188_ = _032_;
  assign _180_ = reset;
  assign _179_ = recirculacion_estruct;
  assign _259_ = _103_;
endmodule

(* top =  1  *)
(* src = "phy_tx_estruct.v:4.1-118.10" *)
module phy_tx_estruct(In0, In1, In2, In3, clk, clk_2f, clk_4f, valid0, valid1, valid2, valid3, recirculacion_estruct, reset, data_PSA_estruct, valid_PSA_estruct, data_Probador0_estruct, data_Probador1_estruct, data_Probador2_estruct, data_Probador3_estruct, valid0_probador_estruct, valid1_probador_estruct, valid2_probador_estruct, valid3_probador_estruct);
  (* src = "phy_tx_estruct.v:5.17-5.20" *)
  input [7:0] In0;
  (* src = "phy_tx_estruct.v:30.12-30.20" *)
  wire [7:0] In0_good;
  (* src = "phy_tx_estruct.v:6.17-6.20" *)
  input [7:0] In1;
  (* src = "phy_tx_estruct.v:30.22-30.30" *)
  wire [7:0] In1_good;
  (* src = "phy_tx_estruct.v:7.17-7.20" *)
  input [7:0] In2;
  (* src = "phy_tx_estruct.v:30.32-30.40" *)
  wire [7:0] In2_good;
  (* src = "phy_tx_estruct.v:8.17-8.20" *)
  input [7:0] In3;
  (* src = "phy_tx_estruct.v:30.42-30.50" *)
  wire [7:0] In3_good;
  (* src = "phy_tx_estruct.v:9.11-9.14" *)
  input clk;
  (* src = "phy_tx_estruct.v:10.11-10.17" *)
  input clk_2f;
  (* src = "phy_tx_estruct.v:11.11-11.17" *)
  input clk_4f;
  (* src = "phy_tx_estruct.v:15.18-15.37" *)
  output [7:0] data_PSA_estruct;
  (* src = "phy_tx_estruct.v:19.18-19.32" *)
  output [7:0] data_Probador0_estruct;
  (* src = "phy_tx_estruct.v:20.18-20.32" *)
  output [7:0] data_Probador1_estruct;
  (* src = "phy_tx_estruct.v:21.18-21.32" *)
  output [7:0] data_Probador2_estruct;
  (* src = "phy_tx_estruct.v:22.18-22.32" *)
  output [7:0] data_Probador3_estruct;
  (* src = "phy_tx_estruct.v:27.12-27.21" *)
  wire [7:0] out_temp1;
  (* src = "phy_tx_estruct.v:27.23-27.32" *)
  wire [7:0] out_temp2;
  (* src = "phy_tx_estruct.v:13.11-13.24" *)
  input recirculacion_estruct;
  (* src = "phy_tx_estruct.v:14.11-14.16" *)
  input reset;
  (* src = "phy_tx_estruct.v:12.11-12.17" *)
  input valid0;
  (* src = "phy_tx_estruct.v:31.6-31.17" *)
  wire valid0_good;
  (* src = "phy_tx_estruct.v:23.12-23.27" *)
  output valid0_probador_estruct;
  (* src = "phy_tx_estruct.v:12.19-12.25" *)
  input valid1;
  (* src = "phy_tx_estruct.v:31.19-31.30" *)
  wire valid1_good;
  (* src = "phy_tx_estruct.v:23.29-23.44" *)
  output valid1_probador_estruct;
  (* src = "phy_tx_estruct.v:12.27-12.33" *)
  input valid2;
  (* src = "phy_tx_estruct.v:31.32-31.43" *)
  wire valid2_good;
  (* src = "phy_tx_estruct.v:23.46-23.61" *)
  output valid2_probador_estruct;
  (* src = "phy_tx_estruct.v:12.35-12.41" *)
  input valid3;
  (* src = "phy_tx_estruct.v:31.45-31.56" *)
  wire valid3_good;
  (* src = "phy_tx_estruct.v:23.63-23.78" *)
  output valid3_probador_estruct;
  (* src = "phy_tx_estruct.v:16.12-16.32" *)
  output valid_PSA_estruct;
  (* src = "phy_tx_estruct.v:28.6-28.17" *)
  wire valid_out_1;
  (* src = "phy_tx_estruct.v:28.19-28.30" *)
  wire valid_out_2;
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_estruct.v:79.14-88.2" *)
  Mux2x1_8Bits_estruct MUX2x1_1 (
    .In0(In1_good),
    .In1(In0_good),
    .clk(clk_2f),
    .data_out(out_temp1),
    .outValid(valid_out_1),
    .reset(reset),
    .valid0(valid1_good),
    .valid1(valid0_good)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_estruct.v:90.14-99.2" *)
  Mux2x1_8Bits_estruct MUX2x1_2 (
    .In0(In3_good),
    .In1(In2_good),
    .clk(clk_2f),
    .data_out(out_temp2),
    .outValid(valid_out_2),
    .reset(reset),
    .valid0(valid3_good),
    .valid1(valid2_good)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_estruct.v:106.14-115.2" *)
  Mux2x1_8Bits_estruct MUX2x1_3 (
    .In0(out_temp2),
    .In1(out_temp1),
    .clk(clk_4f),
    .data_out(data_PSA_estruct),
    .outValid(valid_PSA_estruct),
    .reset(reset),
    .valid0(valid_out_2),
    .valid1(valid_out_1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "phy_tx_estruct.v:39.15-68.2" *)
  Recirculacion_estruct Recirculacion_testbench (
    .In0(In0),
    .In1(In1),
    .In2(In2),
    .In3(In3),
    .clk(clk),
    .data_Probador0_estruct(data_Probador0_estruct),
    .data_Probador1_estruct(data_Probador1_estruct),
    .data_Probador2_estruct(data_Probador2_estruct),
    .data_Probador3_estruct(data_Probador3_estruct),
    .data_mux0(In0_good),
    .data_mux1(In1_good),
    .data_mux2(In2_good),
    .data_mux3(In3_good),
    .recirculacion_estruct(recirculacion_estruct),
    .reset(reset),
    .valid0(valid0),
    .valid0_mux(valid0_good),
    .valid0_probador_estruct(valid0_probador_estruct),
    .valid1(valid1),
    .valid1_mux(valid1_good),
    .valid1_probador_estruct(valid1_probador_estruct),
    .valid2(valid2),
    .valid2_mux(valid2_good),
    .valid2_probador_estruct(valid2_probador_estruct),
    .valid3(valid3),
    .valid3_mux(valid3_good),
    .valid3_probador_estruct(valid3_probador_estruct)
  );
endmodule
