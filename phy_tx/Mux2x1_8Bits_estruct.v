/* Generated by Yosys 0.9+4052 (git sha1 44520808, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) */

(* top =  1  *)
(* src = "Mux2x1_8Bits_estruct.v:3.1-40.10" *)
module Mux2x1_8Bits_estruct(In0, In1, clk, valid0, valid1, outValid, data_out);
  (* src = "Mux2x1_8Bits_estruct.v:33.5-38.8" *)
  wire _00_;
  (* src = "Mux2x1_8Bits_estruct.v:14.5-31.8" *)
  wire [7:0] _01_;
  (* src = "Mux2x1_8Bits_estruct.v:14.5-31.8" *)
  wire _02_;
  (* src = "Mux2x1_8Bits_estruct.v:34.21-34.33" *)
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31" *)
  wire [31:0] _03_;
  (* src = "Mux2x1_8Bits_estruct.v:18.12-18.39" *)
  wire _04_;
  (* src = "Mux2x1_8Bits_estruct.v:23.17-23.44" *)
  wire _05_;
  wire _06_;
  (* src = "Mux2x1_8Bits_estruct.v:18.26-18.39" *)
  wire _07_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  input [7:0] In0;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  input [7:0] In1;
  (* src = "Mux2x1_8Bits_estruct.v:10.15-10.28" *)
  wire [7:0] ValorAnterior;
  (* src = "Mux2x1_8Bits_estruct.v:5.11-5.14" *)
  input clk;
  (* src = "Mux2x1_8Bits_estruct.v:7.22-7.30" *)
  output [7:0] data_out;
  reg [7:0] data_out;
  (* src = "Mux2x1_8Bits_estruct.v:6.16-6.24" *)
  output outValid;
  reg outValid;
  (* src = "Mux2x1_8Bits_estruct.v:12.9-12.17" *)
  reg selector = 1'h0;
  (* src = "Mux2x1_8Bits_estruct.v:5.16-5.22" *)
  input valid0;
  (* src = "Mux2x1_8Bits_estruct.v:5.24-5.30" *)
  input valid1;
  (* src = "Mux2x1_8Bits_estruct.v:11.10-11.19" *)
  wire validTemp;
  assign { _03_[31:1], _00_ } = selector + (* src = "Mux2x1_8Bits_estruct.v:34.21-34.33" *) 32'd1;
  assign _04_ = valid0 & (* src = "Mux2x1_8Bits_estruct.v:18.12-18.39" *) _07_;
  assign _05_ = valid1 & (* src = "Mux2x1_8Bits_estruct.v:23.17-23.44" *) selector;
  assign _06_ = | { _05_, _04_ };
  (* src = "Mux2x1_8Bits_estruct.v:33.5-38.8" *)
  always @(posedge clk)
    if (_06_) data_out <= ValorAnterior;
  assign _07_ = ~ (* src = "Mux2x1_8Bits_estruct.v:18.26-18.39" *) selector;
  (* src = "Mux2x1_8Bits_estruct.v:33.5-38.8" *)
  always @(posedge clk)
    outValid <= validTemp;
  (* src = "Mux2x1_8Bits_estruct.v:33.5-38.8" *)
  always @(posedge clk)
    selector <= _00_;
  assign _02_ = _05_ ? (* full_case = 32'd1 *) (* src = "Mux2x1_8Bits_estruct.v:23.17-23.44|Mux2x1_8Bits.v:23.14-30.12" *) valid1 : 1'h0;
  assign _01_ = _05_ ? (* full_case = 32'd1 *) (* src = "Mux2x1_8Bits_estruct.v:23.17-23.44|Mux2x1_8Bits.v:23.14-30.12" *) In1 : 8'hxx;
  assign validTemp = _04_ ? (* full_case = 32'd1 *) (* src = "Mux2x1_8Bits_estruct.v:18.12-18.39|Mux2x1_8Bits.v:18.9-30.12" *) valid0 : _02_;
  assign ValorAnterior = _04_ ? (* full_case = 32'd1 *) (* src = "Mux2x1_8Bits_estruct.v:18.12-18.39|Mux2x1_8Bits.v:18.9-30.12" *) In0 : _01_;
  assign _03_[0] = _00_;
endmodule
