/* Generated by Yosys 0.9+4052 (git sha1 44520808, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) */

(* top =  1  *)
(* src = "Mux2x1_8Bits_estruct.v:3.1-46.10" *)
module Mux2x1_8Bits_estruct(In0, In1, clk, valid0, valid1, reset, outValid, data_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  (* src = "Mux2x1_8Bits_estruct.v:4.17-4.20" *)
  input [7:0] In0;
  (* src = "Mux2x1_8Bits_estruct.v:4.21-4.24" *)
  input [7:0] In1;
  (* src = "Mux2x1_8Bits_estruct.v:5.11-5.14" *)
  input clk;
  (* src = "Mux2x1_8Bits_estruct.v:8.22-8.30" *)
  output [7:0] data_out;
  (* src = "Mux2x1_8Bits_estruct.v:7.16-7.24" *)
  output outValid;
  (* src = "Mux2x1_8Bits_estruct.v:6.11-6.16" *)
  input reset;
  (* src = "Mux2x1_8Bits_estruct.v:13.9-13.17" *)
  wire selector;
  (* src = "Mux2x1_8Bits_estruct.v:5.16-5.22" *)
  input valid0;
  (* src = "Mux2x1_8Bits_estruct.v:5.24-5.30" *)
  input valid1;
  NOT _063_ (
    .A(reset),
    .Y(_011_)
  );
  NOT _064_ (
    .A(selector),
    .Y(_012_)
  );
  NOT _065_ (
    .A(valid1),
    .Y(_013_)
  );
  NOT _066_ (
    .A(valid0),
    .Y(_014_)
  );
  NOR _067_ (
    .A(_012_),
    .B(_013_),
    .Y(_015_)
  );
  NAND _068_ (
    .A(selector),
    .B(valid1),
    .Y(_016_)
  );
  NOR _069_ (
    .A(selector),
    .B(_014_),
    .Y(_017_)
  );
  NAND _070_ (
    .A(_012_),
    .B(valid0),
    .Y(_018_)
  );
  NOR _071_ (
    .A(_015_),
    .B(_017_),
    .Y(_019_)
  );
  NAND _072_ (
    .A(_016_),
    .B(_018_),
    .Y(_020_)
  );
  NOR _073_ (
    .A(reset),
    .B(_019_),
    .Y(_021_)
  );
  NAND _074_ (
    .A(_011_),
    .B(_020_),
    .Y(_022_)
  );
  NAND _075_ (
    .A(outValid),
    .B(reset),
    .Y(_023_)
  );
  NAND _076_ (
    .A(_022_),
    .B(_023_),
    .Y(_008_)
  );
  NAND _077_ (
    .A(In1[7]),
    .B(_015_),
    .Y(_024_)
  );
  NAND _078_ (
    .A(In0[7]),
    .B(_017_),
    .Y(_025_)
  );
  NAND _079_ (
    .A(_024_),
    .B(_025_),
    .Y(_026_)
  );
  NAND _080_ (
    .A(_021_),
    .B(_026_),
    .Y(_027_)
  );
  NAND _081_ (
    .A(data_out[7]),
    .B(_022_),
    .Y(_028_)
  );
  NAND _082_ (
    .A(_027_),
    .B(_028_),
    .Y(_007_)
  );
  NAND _083_ (
    .A(In1[6]),
    .B(_015_),
    .Y(_029_)
  );
  NAND _084_ (
    .A(In0[6]),
    .B(_017_),
    .Y(_030_)
  );
  NAND _085_ (
    .A(_029_),
    .B(_030_),
    .Y(_031_)
  );
  NAND _086_ (
    .A(_021_),
    .B(_031_),
    .Y(_032_)
  );
  NAND _087_ (
    .A(data_out[6]),
    .B(_022_),
    .Y(_033_)
  );
  NAND _088_ (
    .A(_032_),
    .B(_033_),
    .Y(_006_)
  );
  NAND _089_ (
    .A(In1[5]),
    .B(_015_),
    .Y(_034_)
  );
  NAND _090_ (
    .A(In0[5]),
    .B(_017_),
    .Y(_035_)
  );
  NAND _091_ (
    .A(_034_),
    .B(_035_),
    .Y(_036_)
  );
  NAND _092_ (
    .A(_021_),
    .B(_036_),
    .Y(_037_)
  );
  NAND _093_ (
    .A(data_out[5]),
    .B(_022_),
    .Y(_038_)
  );
  NAND _094_ (
    .A(_037_),
    .B(_038_),
    .Y(_005_)
  );
  NAND _095_ (
    .A(In1[4]),
    .B(_015_),
    .Y(_039_)
  );
  NAND _096_ (
    .A(In0[4]),
    .B(_017_),
    .Y(_040_)
  );
  NAND _097_ (
    .A(_039_),
    .B(_040_),
    .Y(_041_)
  );
  NAND _098_ (
    .A(_021_),
    .B(_041_),
    .Y(_042_)
  );
  NAND _099_ (
    .A(data_out[4]),
    .B(_022_),
    .Y(_043_)
  );
  NAND _100_ (
    .A(_042_),
    .B(_043_),
    .Y(_004_)
  );
  NAND _101_ (
    .A(In1[3]),
    .B(_015_),
    .Y(_044_)
  );
  NAND _102_ (
    .A(In0[3]),
    .B(_017_),
    .Y(_045_)
  );
  NAND _103_ (
    .A(_044_),
    .B(_045_),
    .Y(_046_)
  );
  NAND _104_ (
    .A(_021_),
    .B(_046_),
    .Y(_047_)
  );
  NAND _105_ (
    .A(data_out[3]),
    .B(_022_),
    .Y(_048_)
  );
  NAND _106_ (
    .A(_047_),
    .B(_048_),
    .Y(_003_)
  );
  NAND _107_ (
    .A(In1[2]),
    .B(_015_),
    .Y(_049_)
  );
  NAND _108_ (
    .A(In0[2]),
    .B(_017_),
    .Y(_050_)
  );
  NAND _109_ (
    .A(_049_),
    .B(_050_),
    .Y(_051_)
  );
  NAND _110_ (
    .A(_021_),
    .B(_051_),
    .Y(_052_)
  );
  NAND _111_ (
    .A(data_out[2]),
    .B(_022_),
    .Y(_053_)
  );
  NAND _112_ (
    .A(_052_),
    .B(_053_),
    .Y(_002_)
  );
  NAND _113_ (
    .A(In1[1]),
    .B(_015_),
    .Y(_054_)
  );
  NAND _114_ (
    .A(In0[1]),
    .B(_017_),
    .Y(_055_)
  );
  NAND _115_ (
    .A(_054_),
    .B(_055_),
    .Y(_056_)
  );
  NAND _116_ (
    .A(_021_),
    .B(_056_),
    .Y(_057_)
  );
  NAND _117_ (
    .A(data_out[1]),
    .B(_022_),
    .Y(_058_)
  );
  NAND _118_ (
    .A(_057_),
    .B(_058_),
    .Y(_001_)
  );
  NAND _119_ (
    .A(In1[0]),
    .B(_015_),
    .Y(_059_)
  );
  NAND _120_ (
    .A(In0[0]),
    .B(_017_),
    .Y(_060_)
  );
  NAND _121_ (
    .A(_059_),
    .B(_060_),
    .Y(_061_)
  );
  NAND _122_ (
    .A(_021_),
    .B(_061_),
    .Y(_062_)
  );
  NAND _123_ (
    .A(data_out[0]),
    .B(_022_),
    .Y(_010_)
  );
  NAND _124_ (
    .A(_062_),
    .B(_010_),
    .Y(_000_)
  );
  NOR _125_ (
    .A(reset),
    .B(selector),
    .Y(_009_)
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _126_ (
    .C(clk),
    .D(_000_),
    .Q(data_out[0])
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _127_ (
    .C(clk),
    .D(_001_),
    .Q(data_out[1])
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _128_ (
    .C(clk),
    .D(_002_),
    .Q(data_out[2])
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _129_ (
    .C(clk),
    .D(_003_),
    .Q(data_out[3])
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _130_ (
    .C(clk),
    .D(_004_),
    .Q(data_out[4])
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _131_ (
    .C(clk),
    .D(_005_),
    .Q(data_out[5])
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _132_ (
    .C(clk),
    .D(_006_),
    .Q(data_out[6])
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _133_ (
    .C(clk),
    .D(_007_),
    .Q(data_out[7])
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _134_ (
    .C(clk),
    .D(_008_),
    .Q(outValid)
  );
  (* src = "Mux2x1_8Bits_estruct.v:35.5-44.8" *)
  DFF _135_ (
    .C(clk),
    .D(_009_),
    .Q(selector)
  );
endmodule
