$date
	Tue May 25 01:59:16 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module BancoPruebas_phy_tx $end
$var wire 1 ! valid_out $end
$var wire 1 " valid3 $end
$var wire 1 # valid2 $end
$var wire 1 $ valid1 $end
$var wire 1 % valid0 $end
$var wire 8 & data_out [7:0] $end
$var wire 1 ' clk4 $end
$var wire 1 ( clk2 $end
$var wire 1 ) clk $end
$var wire 8 * In3 [7:0] $end
$var wire 8 + In2 [7:0] $end
$var wire 8 , In1 [7:0] $end
$var wire 8 - In0 [7:0] $end
$scope module Probador_phy_tx_testbench $end
$var wire 8 . data_out [7:0] $end
$var reg 8 / In0 [7:0] $end
$var reg 8 0 In1 [7:0] $end
$var reg 8 1 In2 [7:0] $end
$var reg 8 2 In3 [7:0] $end
$var reg 1 ) clk $end
$var reg 1 ( clk2 $end
$var reg 1 ' clk4 $end
$var reg 1 % valid0 $end
$var reg 1 $ valid1 $end
$var reg 1 # valid2 $end
$var reg 1 " valid3 $end
$upscope $end
$scope module phy_tx_testbench $end
$var wire 8 3 In0 [7:0] $end
$var wire 8 4 In1 [7:0] $end
$var wire 8 5 In2 [7:0] $end
$var wire 8 6 In3 [7:0] $end
$var wire 1 ) clk $end
$var wire 1 ( clk2 $end
$var wire 1 ' clk4 $end
$var wire 1 % valid0 $end
$var wire 1 $ valid1 $end
$var wire 1 # valid2 $end
$var wire 1 " valid3 $end
$var wire 1 7 valid_out_2 $end
$var wire 1 8 valid_out_1 $end
$var wire 1 ! valid_out $end
$var wire 8 9 out_temp2 [7:0] $end
$var wire 8 : out_temp1 [7:0] $end
$var wire 8 ; data_out [7:0] $end
$scope module MUX2x1_1 $end
$var wire 8 < In0 [7:0] $end
$var wire 8 = In1 [7:0] $end
$var wire 1 ( clk $end
$var wire 1 % valid0 $end
$var wire 1 $ valid1 $end
$var reg 8 > ValorAnterior [7:0] $end
$var reg 8 ? data_out [7:0] $end
$var reg 1 8 outValid $end
$var reg 1 @ selector $end
$var reg 1 A validTemp $end
$upscope $end
$scope module MUX2x1_2 $end
$var wire 8 B In0 [7:0] $end
$var wire 8 C In1 [7:0] $end
$var wire 1 ( clk $end
$var wire 1 # valid0 $end
$var wire 1 " valid1 $end
$var reg 8 D ValorAnterior [7:0] $end
$var reg 8 E data_out [7:0] $end
$var reg 1 7 outValid $end
$var reg 1 F selector $end
$var reg 1 G validTemp $end
$upscope $end
$scope module MUX2x1_3 $end
$var wire 8 H In0 [7:0] $end
$var wire 8 I In1 [7:0] $end
$var wire 1 ' clk $end
$var wire 1 7 valid0 $end
$var wire 1 8 valid1 $end
$var reg 8 J ValorAnterior [7:0] $end
$var reg 8 K data_out [7:0] $end
$var reg 1 ! outValid $end
$var reg 1 L selector $end
$var reg 1 M validTemp $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0M
1L
bx K
bx J
bx I
bx H
0G
1F
bx E
bx D
bx C
bx B
0A
1@
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
08
07
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
0)
1(
1'
bx &
x%
x$
x#
x"
0!
$end
#2
0'
#4
0L
1'
0(
#6
0'
#8
1G
b11011101 D
1A
b11111111 >
1L
0F
0@
1"
1#
1$
1%
b11001100 *
b11001100 2
b11001100 6
b11001100 C
b11011101 +
b11011101 1
b11011101 5
b11011101 B
b11101110 ,
b11101110 0
b11101110 4
b11101110 =
b11111111 -
b11111111 /
b11111111 3
b11111111 <
1'
1(
1)
#10
0'
#12
0L
1'
0(
#14
0'
#16
b11101110 >
1M
b11111111 J
b11001100 D
1L
18
b11111111 :
b11111111 ?
b11111111 I
1@
17
b11011101 9
b11011101 E
b11011101 H
1F
1'
1(
0)
#18
0'
#20
b11011101 J
1!
b11111111 &
b11111111 .
b11111111 ;
b11111111 K
0L
1'
0(
#22
0'
#24
b11101110 J
b10011001 D
b10111011 >
b11011101 &
b11011101 .
b11011101 ;
b11011101 K
1L
b11001100 9
b11001100 E
b11001100 H
0F
b11101110 :
b11101110 ?
b11101110 I
0@
b10001000 *
b10001000 2
b10001000 6
b10001000 C
b10011001 +
b10011001 1
b10011001 5
b10011001 B
b10101010 ,
b10101010 0
b10101010 4
b10101010 =
b10111011 -
b10111011 /
b10111011 3
b10111011 <
1'
1(
1)
#26
0'
#28
b11001100 J
b11101110 &
b11101110 .
b11101110 ;
b11101110 K
0L
1'
0(
#30
0'
#32
b10101010 >
b10111011 J
b10001000 D
b11001100 &
b11001100 .
b11001100 ;
b11001100 K
1L
b10111011 :
b10111011 ?
b10111011 I
1@
b10011001 9
b10011001 E
b10011001 H
1F
1'
1(
0)
#34
0'
#36
b10011001 J
b10111011 &
b10111011 .
b10111011 ;
b10111011 K
0L
1'
0(
#38
0'
#40
b10101010 J
b1110111 D
0A
b10011001 &
b10011001 .
b10011001 ;
b10011001 K
1L
b10001000 9
b10001000 E
b10001000 H
0F
b10101010 :
b10101010 ?
b10101010 I
0@
b1010101 *
b1010101 2
b1010101 6
b1010101 C
b1110111 +
b1110111 1
b1110111 5
b1110111 B
b1010101 ,
b1010101 0
b1010101 4
b1010101 =
b1010101 -
b1010101 /
b1010101 3
b1010101 <
0"
0$
0%
1'
1(
1)
#42
0'
#44
b10001000 J
b10101010 &
b10101010 .
b10101010 ;
b10101010 K
0L
1'
0(
#46
0'
#48
0M
0G
b10001000 &
b10001000 .
b10001000 ;
b10001000 K
1L
08
1@
b1110111 9
b1110111 E
b1110111 H
1F
1'
1(
0)
#50
0'
#52
1M
b1110111 J
0!
0L
1'
0(
#54
0'
#56
0M
1!
b1110111 &
b1110111 .
b1110111 ;
b1110111 K
1L
07
0F
0@
0#
1'
1(
1)
#58
0'
#60
0!
0L
1'
0(
#62
0'
#64
1L
1@
1F
1'
1(
0)
#66
0'
#68
0L
1'
0(
#70
0'
#72
1L
0F
0@
b0 *
b0 2
b0 6
b0 C
b0 +
b0 1
b0 5
b0 B
b0 ,
b0 0
b0 4
b0 =
b0 -
b0 /
b0 3
b0 <
1'
1(
1)
