$date
	Tue May 25 14:40:30 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module BancoPruebas_phy_tx $end
$var wire 1 ! valid_out $end
$var wire 1 " validIn $end
$var wire 1 # valid3 $end
$var wire 1 $ valid2 $end
$var wire 1 % valid1 $end
$var wire 1 & valid0 $end
$var wire 8 ' data_out [7:0] $end
$var wire 8 ( data_Probador3 [7:0] $end
$var wire 8 ) data_Probador2 [7:0] $end
$var wire 8 * data_Probador1 [7:0] $end
$var wire 8 + data_Probador0 [7:0] $end
$var wire 1 , clk4 $end
$var wire 1 - clk2 $end
$var wire 1 . clk $end
$var wire 8 / In3 [7:0] $end
$var wire 8 0 In2 [7:0] $end
$var wire 8 1 In1 [7:0] $end
$var wire 8 2 In0 [7:0] $end
$scope module Probador_phy_tx_testbench $end
$var wire 1 ! valid_out $end
$var wire 8 3 data_out [7:0] $end
$var wire 8 4 data_Probador3 [7:0] $end
$var wire 8 5 data_Probador2 [7:0] $end
$var wire 8 6 data_Probador1 [7:0] $end
$var wire 8 7 data_Probador0 [7:0] $end
$var reg 8 8 In0 [7:0] $end
$var reg 8 9 In1 [7:0] $end
$var reg 8 : In2 [7:0] $end
$var reg 8 ; In3 [7:0] $end
$var reg 1 . clk $end
$var reg 1 - clk2 $end
$var reg 1 , clk4 $end
$var reg 1 & valid0 $end
$var reg 1 % valid1 $end
$var reg 1 $ valid2 $end
$var reg 1 # valid3 $end
$var reg 1 " validIn $end
$upscope $end
$scope module phy_tx_testbench $end
$var wire 8 < In0 [7:0] $end
$var wire 8 = In1 [7:0] $end
$var wire 8 > In2 [7:0] $end
$var wire 8 ? In3 [7:0] $end
$var wire 1 . clk $end
$var wire 1 - clk2 $end
$var wire 1 , clk4 $end
$var wire 1 & valid0 $end
$var wire 1 % valid1 $end
$var wire 1 $ valid2 $end
$var wire 1 # valid3 $end
$var wire 1 " validIn $end
$var wire 1 @ valid_out_2 $end
$var wire 1 A valid_out_1 $end
$var wire 1 ! valid_out $end
$var wire 8 B out_temp2 [7:0] $end
$var wire 8 C out_temp1 [7:0] $end
$var wire 8 D data_out [7:0] $end
$var wire 8 E data_Probador3 [7:0] $end
$var wire 8 F data_Probador2 [7:0] $end
$var wire 8 G data_Probador1 [7:0] $end
$var wire 8 H data_Probador0 [7:0] $end
$var wire 8 I In3_good [7:0] $end
$var wire 8 J In2_good [7:0] $end
$var wire 8 K In1_good [7:0] $end
$var wire 8 L In0_good [7:0] $end
$scope module MUX2x1_1 $end
$var wire 1 - clk $end
$var wire 1 & valid0 $end
$var wire 1 % valid1 $end
$var wire 8 M In1 [7:0] $end
$var wire 8 N In0 [7:0] $end
$var reg 8 O ValorAnterior [7:0] $end
$var reg 8 P data_out [7:0] $end
$var reg 1 A outValid $end
$var reg 1 Q selector $end
$var reg 1 R validTemp $end
$upscope $end
$scope module MUX2x1_2 $end
$var wire 1 - clk $end
$var wire 1 $ valid0 $end
$var wire 1 # valid1 $end
$var wire 8 S In1 [7:0] $end
$var wire 8 T In0 [7:0] $end
$var reg 8 U ValorAnterior [7:0] $end
$var reg 8 V data_out [7:0] $end
$var reg 1 @ outValid $end
$var reg 1 W selector $end
$var reg 1 X validTemp $end
$upscope $end
$scope module MUX2x1_3 $end
$var wire 8 Y In0 [7:0] $end
$var wire 8 Z In1 [7:0] $end
$var wire 1 , clk $end
$var wire 1 @ valid0 $end
$var wire 1 A valid1 $end
$var reg 8 [ ValorAnterior [7:0] $end
$var reg 8 \ data_out [7:0] $end
$var reg 1 ! outValid $end
$var reg 1 ] selector $end
$var reg 1 ^ validTemp $end
$upscope $end
$scope module Recirculacion_testbench $end
$var wire 8 _ In0 [7:0] $end
$var wire 8 ` In1 [7:0] $end
$var wire 8 a In2 [7:0] $end
$var wire 8 b In3 [7:0] $end
$var wire 1 " validIn $end
$var reg 8 c data_Probador0 [7:0] $end
$var reg 8 d data_Probador1 [7:0] $end
$var reg 8 e data_Probador2 [7:0] $end
$var reg 8 f data_Probador3 [7:0] $end
$var reg 8 g data_mux0 [7:0] $end
$var reg 8 h data_mux1 [7:0] $end
$var reg 8 i data_mux2 [7:0] $end
$var reg 8 j data_mux3 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
0^
1]
bx \
bx [
bx Z
bx Y
0X
1W
bx V
bx U
bx T
bx S
0R
1Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
0A
0@
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
0.
1-
1,
bx +
bx *
bx )
bx (
bx '
x&
x%
x$
x#
x"
0!
$end
#2
0,
#4
0]
1,
0-
#6
0,
#8
1X
b11011101 U
1R
b11111111 O
b0 (
b0 4
b0 E
b0 f
b11001100 I
b11001100 S
b11001100 j
b0 )
b0 5
b0 F
b0 e
b11011101 J
b11011101 T
b11011101 i
b0 *
b0 6
b0 G
b0 d
b11101110 K
b11101110 M
b11101110 h
b0 +
b0 7
b0 H
b0 c
b11111111 L
b11111111 N
b11111111 g
1]
0W
0Q
1#
1$
1%
1&
b11001100 /
b11001100 ;
b11001100 ?
b11001100 b
b11011101 0
b11011101 :
b11011101 >
b11011101 a
b11101110 1
b11101110 9
b11101110 =
b11101110 `
b11111111 2
b11111111 8
b11111111 <
b11111111 _
1"
1,
1-
1.
#10
0,
#12
0]
1,
0-
#14
0,
#16
b11101110 O
1^
b11111111 [
b11001100 U
1]
1A
b11111111 C
b11111111 P
b11111111 Z
1Q
1@
b11011101 B
b11011101 V
b11011101 Y
1W
1,
1-
0.
#18
0,
#20
b11011101 [
1!
b11111111 '
b11111111 3
b11111111 D
b11111111 \
0]
1,
0-
#22
0,
#24
b10011001 U
b11101110 [
b10111011 O
b10001000 I
b10001000 S
b10001000 j
b10011001 J
b10011001 T
b10011001 i
b10101010 K
b10101010 M
b10101010 h
b10111011 L
b10111011 N
b10111011 g
b11011101 '
b11011101 3
b11011101 D
b11011101 \
1]
b11001100 B
b11001100 V
b11001100 Y
0W
b11101110 C
b11101110 P
b11101110 Z
0Q
b10001000 /
b10001000 ;
b10001000 ?
b10001000 b
b10011001 0
b10011001 :
b10011001 >
b10011001 a
b10101010 1
b10101010 9
b10101010 =
b10101010 `
b10111011 2
b10111011 8
b10111011 <
b10111011 _
1,
1-
1.
#26
0,
#28
b11001100 [
b11101110 '
b11101110 3
b11101110 D
b11101110 \
0]
1,
0-
#30
0,
#32
b10101010 O
b10111011 [
b10001000 U
b11001100 '
b11001100 3
b11001100 D
b11001100 \
1]
b10111011 C
b10111011 P
b10111011 Z
1Q
b10011001 B
b10011001 V
b10011001 Y
1W
1,
1-
0.
#34
0,
#36
b10011001 [
b10111011 '
b10111011 3
b10111011 D
b10111011 \
0]
1,
0-
#38
0,
#40
b10101010 [
b1010101 I
b1010101 S
b1010101 j
b1110111 J
b1110111 T
b1110111 i
b1010101 K
b1010101 M
b1010101 h
b1010101 L
b1010101 N
b1010101 g
b1110111 U
0R
b10011001 '
b10011001 3
b10011001 D
b10011001 \
1]
b10001000 B
b10001000 V
b10001000 Y
0W
b10101010 C
b10101010 P
b10101010 Z
0Q
b1010101 /
b1010101 ;
b1010101 ?
b1010101 b
b1110111 0
b1110111 :
b1110111 >
b1110111 a
b1010101 1
b1010101 9
b1010101 =
b1010101 `
b1010101 2
b1010101 8
b1010101 <
b1010101 _
0#
0%
0&
1,
1-
1.
#42
0,
#44
b10001000 [
b10101010 '
b10101010 3
b10101010 D
b10101010 \
0]
1,
0-
#46
0,
#48
0^
0X
b10001000 '
b10001000 3
b10001000 D
b10001000 \
1]
0A
1Q
b1110111 B
b1110111 V
b1110111 Y
1W
1,
1-
0.
#50
0,
#52
1^
b1110111 [
0!
0]
1,
0-
#54
0,
#56
0^
1!
b1110111 '
b1110111 3
b1110111 D
b1110111 \
1]
0@
0W
0Q
0$
1,
1-
1.
#58
0,
#60
0!
0]
1,
0-
#62
0,
#64
1]
1Q
1W
1,
1-
0.
#66
0,
#68
0]
1,
0-
#70
0,
#72
1X
b0 U
1R
b0 O
b11001100 (
b11001100 4
b11001100 E
b11001100 f
b0 I
b0 S
b0 j
b11011101 )
b11011101 5
b11011101 F
b11011101 e
b0 J
b0 T
b0 i
b11101110 *
b11101110 6
b11101110 G
b11101110 d
b0 K
b0 M
b0 h
b11111111 +
b11111111 7
b11111111 H
b11111111 c
b0 L
b0 N
b0 g
1]
0W
0Q
1#
1$
1%
1&
b11001100 /
b11001100 ;
b11001100 ?
b11001100 b
b11011101 0
b11011101 :
b11011101 >
b11011101 a
b11101110 1
b11101110 9
b11101110 =
b11101110 `
b11111111 2
b11111111 8
b11111111 <
b11111111 _
0"
1,
1-
1.
#74
0,
#76
0]
1,
0-
#78
0,
#80
1^
b0 [
1]
1A
b0 C
b0 P
b0 Z
1Q
1@
b0 B
b0 V
b0 Y
1W
1,
1-
0.
#82
0,
#84
1!
b0 '
b0 3
b0 D
b0 \
0]
1,
0-
#86
0,
#88
b10001000 (
b10001000 4
b10001000 E
b10001000 f
b10011001 )
b10011001 5
b10011001 F
b10011001 e
b10101010 *
b10101010 6
b10101010 G
b10101010 d
b10111011 +
b10111011 7
b10111011 H
b10111011 c
1]
0W
0Q
b10001000 /
b10001000 ;
b10001000 ?
b10001000 b
b10011001 0
b10011001 :
b10011001 >
b10011001 a
b10101010 1
b10101010 9
b10101010 =
b10101010 `
b10111011 2
b10111011 8
b10111011 <
b10111011 _
1,
1-
1.
#90
0,
#92
0]
1,
0-
#94
0,
#96
1]
1Q
1W
1,
1-
0.
#98
0,
#100
0]
1,
0-
#102
0,
#104
b0 (
b0 4
b0 E
b0 f
b0 )
b0 5
b0 F
b0 e
b0 *
b0 6
b0 G
b0 d
b0 +
b0 7
b0 H
b0 c
1]
0W
0Q
b0 /
b0 ;
b0 ?
b0 b
b0 0
b0 :
b0 >
b0 a
b0 1
b0 9
b0 =
b0 `
b0 2
b0 8
b0 <
b0 _
1,
1-
1.
#106
0,
#108
0]
1,
0-
#110
0,
#112
1]
1Q
1W
1,
1-
0.
#114
0,
#116
0]
1,
0-
#118
0,
#120
1]
0W
0Q
1,
1-
1.
